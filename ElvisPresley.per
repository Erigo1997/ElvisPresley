;Let's lay down some ground rules.
(defrule
(true)
=>
(set-strategic-number sn-minimum-civilian-explorers 0)
(set-strategic-number sn-cap-civilian-explorers 0)
(set-strategic-number sn-total-number-explorers 1)
(set-strategic-number sn-number-explore-groups 1)
(set-strategic-number sn-initial-exploration-required 0)
(set-strategic-number sn-percent-attack-soldiers 100)
(disable-self)
)

(defrule
(current-age == dark-age)
=>
(set-strategic-number sn-food-gatherer-percentage 60)
(set-strategic-number sn-wood-gatherer-percentage 35)
(set-strategic-number sn-gold-gatherer-percentage 5)
(set-strategic-number sn-stone-gatherer-percentage 0)
(disable-self)
)

; Let's introduce ourselves.
(defrule
(unit-type-count villager > 0)
=>
(chat-to-all "The king is in the building.")
(disable-self) ;<~~~the disable-self action
)

(defrule
(can-build house)
(housing-headroom < 4) ;the difference between the current population and supportable population
(population-headroom > 3) ;the difference between the current population and the population limit
=>
(build house)
)

(defrule
(current-age == dark-age)
(unit-type-count-total villager < 30)
(can-train villager)
=>
(train villager)
)

(defrule
(building-type-count-total house > 0) ; We want to build a house before a mill
(building-type-count-total mill == 0) ; Prevents the construction of multiple mills
(resource-found food) ; Builds a mill only if forage bushes or deer is found
(can-build mill)
=>
(build mill)
)

(defrule
(building-type-count-total mill > 0)
(building-type-count-total lumber-camp == 0)
(resource-found wood)
(can-build lumber-camp)
=>
(build lumber-camp)
)

(defrule
(building-type-count-total mill > 0)
(building-type-count-total lumber-camp > 0)
(unit-type-count-total villager > 10)
(building-type-count-total mining-camp == 0)
(resource-found gold)
(can-build mining-camp)
=>
(build mining-camp)
)

; Construct barracks.
(defrule
(building-type-count-total mill > 0)
(building-type-count-total lumber-camp > 0)
(building-type-count-total barracks == 0)
(can-build barracks)
=>
(build barracks)
(chat-to-all "Elvis is bringing in some firepower. Or manpower. Just manpower, really.")
)

(defrule
(current-age == dark-age)
(building-type-count-total lumber-camp > 0) ; We want a lumber camp before farms
(unit-type-count-total villager > 15)
(building-type-count-total farm < 15)
(idle-farm-count < 4) ; Only build farms if there are less than 4 idle farms
=>
(build farm)
)

(defrule
(current-age == dark-age)
(building-type-count-total mill > 0)
(building-type-count-total lumber-camp > 0)
(unit-type-count-total villager >= 30)
(can-research feudal-age)
=>
(research feudal-age)
(chat-to-all "Elvis will see you in the next age, baby.")
)

; Let's train some soldiers.
(defrule
(unit-type-count-total militiaman <= 4)
(can-afford-unit militiaman)
=>
(train militiaman)
)

; If they're ready to rock, let's roll.
(defrule
(unit-type-count-total militiaman > 4)
=>
(attack-now)
(chat-to-all "Ready or not, here I come.")
)

; Let's research Loom.
(defrule
(can-research ri-loom)
=>
(research ri-loom)
(disable-self)
)